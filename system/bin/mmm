#!/system/bin/sh
# Written by Draco (tytydraco @ GitHub)

# Constants
DEBUG=1
MODULES_DIR="/sbin/.magisk/modules"

# Add busybox components from Magisk
[[ -d "/sbin/.magisk/busybox" ]] && [[ "$PATH" != *"/sbin/.magisk/busybox"* ]] &&
	export PATH="$PATH:/sbin/.magisk/busybox"

# Check for required dependencies
for dep in basename curl cut grep id mv rm tar
do
	! command -v "$dep" &> /dev/null && err "Unable to locate dependency $dep. Exiting."
done

# Log in red and exit
err() {
	echo -e "\e[91m[!] $@\e[39m"
	exit 1
}

# Log in white and continue (unnecessary)
dbg() {
	[[ "$DEBUG" -eq 1 ]] && echo -e "[*] $@"
}

# Print mmm command list and syntax
usage() {
	echo -n "Usage: `basename $0` <COMMAND> [ARGUMENTS]
Options:
  add AUTHOR:NAME	Install module from author
  del AUTHOR:NAME	Delete installed module
  upgrade AUTHOR:NAME	Upgrade an existing module
  list			List all installed modules
  help			Show usage
"
}

add() {
	# Bail if invalid format
	[[ "$1" != *":"* ]] &&
		err "Module must be in AUTHOR:NAME format. Exiting."

	# Parse input and separate
	local author=`echo "$1" | cut -d ":" -f1`
	local name=`echo "$1" | cut -d ":" -f2`
	[[ -z "$author" ]] && err "Author not specified. Exiting."
	[[ -z "$name" ]] && err "Name not specified. Exiting."

	# Bail if module already exists
	[[ -d "$MODULES_DIR/$author:$name" ]] && err "Module already exists. Exiting."

	# Fetch the archive	
	local url="https://github.com/$author/$name/archive/master.tar.gz"
	! curl -Lsfo /dev/null "$url" && err "Invalid URL specified. Exiting."
	dbg "Fetching archive."
	mkdir "$MODULES_DIR/tmp"
	curl -Lso "$MODULES_DIR/tmp.tar.gz" "$url"	

	# Check for curl success
	[[ $? -ne 0 ]] && err "Failed to fetch archive from $url. Exiting."

	# Extract
	dbg "Extracting archive."
	tar xf "$MODULES_DIR/tmp.tar.gz" -C "$MODULES_DIR/tmp"
	
	# Rename with mmm folder structure
	dbg "Moving contents to mmm folder structure."
	local dirname=`ls "$MODULES_DIR/tmp"`
	cd "$MODULES_DIR/tmp/$dirname"
	zip -r9 "$MODULES_DIR/tmp/repack.zip" .

	# Customize script
	dbg "Setting up environment for customize.sh."
	local ZIPFILE="$MODULES_DIR/tmp/repack.zip"
	curl -Ls "https://raw.githubusercontent.com/topjohnwu/Magisk/master/scripts/module_installer.sh" | sh

	# Cleanup
	dbg "Cleaning up."
	rm -rf "$MODULES_DIR/tmp"
	rm "$MODULES_DIR/tmp.tar.gz"

	dbg "Installed $author:$name."
}

del() {
	# Bail if module does not exist
	[[ ! -d "$MODULES_DIR/$1" ]] && err "Module does not exist exists. Exiting."

	dbg "Deleting module."
	rm -rf "$MODULES_DIR/$1"

	dbg "Deleted $1."
}

list() {
	for module in `ls $MODULES_DIR`
	do
		# Show module description if available
		if [[ -f "$MODULES_DIR/$module/module.prop" ]]
		then
			local desc=`cat $MODULES_DIR/$module/module.prop |
				grep "description=" | sed "s/description=//"`
			echo -e "$module :: $desc"
		else
			echo "$module"
		fi
	done
}

# Check for root permissions
[[ `id -u` -ne 0 ]] && err "No root permissions. Exiting."

# Ensure modules folder exists
[[ ! -d "$MODULES_DIR" ]] &&
	err "No modules directory found at $MODULES_DIR. Exiting."

# Handle commands and arguments passed
case "$1" in
	"add")
		add "$2"
		;;
	"del")
		del "$2"
		;;
	"upgrade")
		del "$2"
		add "$2"
		;;
	"list")
		list
		;;
	"help")
		usage
		exit 0
		;;
	"")
		usage
		exit 0
		;;
	*)
		err "Unknown command: $1. Exiting."
		;;
esac
